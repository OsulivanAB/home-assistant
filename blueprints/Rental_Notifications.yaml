blueprint:
  domain: automation
  source_url: https://github.com/OsulivanAB/home-assistant/blob/main/blueprints/Rental_Notifications.yaml
  author: Anthon Bahl (@AnthonyBahl)
  name: Rental Notifications 📱
  homeassistant:
    min_version: 2024.6.0
  description: >
    # Rental Notifications 📱

    <b>Version 1.1.0</b>


    I created this blueprint to send myself notification when things around the house need to be addressed.

    <details>
      <summary><b>My The Automation Proccess:</b> 👈</summary>

      - **Triggers**
        - **Time of Day** - This is the time of day that the notification will trigger.
      - **Conditions**
        - **Days of the Week** - This is the days of the week that the notification will trigger.
        - **Check if it's time to notify** - This is to check if the notification has already been sent.
      - **Actions**
        - **Send Notification** - This is to send the notification to the device.
        - **Wait for Response** - This is to wait for the user to respond to the notification.
        - **Perform the Action** - This is to perform the action based on the user's response.
          - **Complete Button Pressed** - This is to set the date last completed to today.
          - **Snooze Button Pressed** - This is to set the date to delay the next notification by the number of days specified.
          - **Notification Cleared** - This is to do nothing if the notification is cleared.

    </details>


      <details>
        <summary><b>Changelog</b> 👈</summary>
        <ul>
        <li>Version 1.2.0</li>
        <ul>
          <li>Updated notification cleared logic to match snooze logic</li>
          <li>Bug fix to remove loop from choose statement for clearing notifications</li>
        </ul>
        <li>Version 1.1.0</li>
        <ul>
          <li>Added support for multiple notification devices</li>
          <li>Improved snooze logic and configuration</li>
          <li>Enhanced input validation and helper descriptions</li>
          <li>Updated blueprint metadata for Home Assistant 2024.6.0+</li>
          <li>Minor bug fixes and documentation improvements</li>
        </ul>
        <li>Version 0.1.0</li>
        <ul>
          <li>Initial Release</li>
        </ul>
        </ul>
      </details>


    \* Required
  input:
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications.
      selector:
        device:
          filter:
            integration: mobile_app
          multiple: true
    trigger_settings:
      name: Trigger Settings *
      icon: mdi:ear-hearing
      description: Settings for what will trigger the notification.
      collapsed: false
      input:
        trigger_time:
          name: Time to Trigger *
          description: >
            The time of day to trigger the notification.


            📝 Note - This will fire every day, however you can configure it to only happen on certain days in the conditions section.
          selector:
            time: 
          default: "09:00:00"
        days_of_week:
          name: Days of the Week
          description: Days on which the automation should trigger.
          default:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
          selector:
            select:
              options:
                - sun
                - mon
                - tue
                - wed
                - thu
                - fri
                - sat
              mode: list
              multiple: true
        date_last_completed_helper:
          name: Date Helper for last completed.
          description: >
            Date Helper which will be updated when the action is completed.


            📝 Note - To create a date helper, go to settings -> helpers -> add helper -> date and time.
          selector:
            entity:
              domain: input_datetime
          default: []
        days_between_notifications:
          name: Days between notifications
          description: >
            The number of days between notifications.
          selector:
            number:
              min: 0
              max: 1095
              mode: box
              step: 1
              unit_of_measurement: days
          default: 182
    notification_settings:
      name: Notification Settings *
      icon: mdi:bell
      description: Settings for the notification.
      collapsed: false
      input:
        message_title:
          name: Message Title
          description: Title of the notification.
          default: Rental Maintenance
        message_body:
          name: Message Body
          description: Body of the notification.
        snooze_duration:
          name: Snooze Duration
          description: >
            The number of days to snooze the notification for.
          selector:
            number:
              min: 0
              max: 62
              mode: box
              step: 1
              unit_of_measurement: days
          default: 3

mode: single

variables:
  days_between_notifications: !input days_between_notifications
  snooze_duration: !input snooze_duration
  date_last_completed_helper: !input date_last_completed_helper

triggers:
  - at: !input trigger_time
    alias: Daily at !input trigger_time
    trigger: time

conditions:
  - alias: Verify Day of the Week
    condition: time
    weekday: !input days_of_week
  - alias: Check if it's time to notify
    condition: template
    value_template: >-
      {{ (now().date() - as_datetime(states(date_last_completed_helper)).date())
      >= timedelta(days= (days_between_notifications | int)) }}

actions:
  - alias: Set up variables for the actions
    variables:
      action_complete: "{{ 'COMPLETE_' ~ context.id }}"
      action_snooze: "{{ 'SNOOZE_' ~ context.id }}"    
  - alias: Send notifications to all devices
    repeat:
      for_each: !input notify_device
      sequence:
        - service: mobile_app.notify
          data:
            device_id: "{{ repeat.item }}"
            title: !input message_title
            message: !input message_body
            data:
              tag: "{{ context.id }}"
              actions:
                - action: "{{ action_complete }}"
                  title: Complete
                - action: "{{ action_snooze }}"
                  title: Snooze
  - alias: Wait for response from any device
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_complete }}"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_snooze }}"
      - platform: event
        event_type: mobile_app_notification_cleared
        event_data:
          action_1_key: "{{ action_complete }}"
    timeout:
      hours: 48
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - alias: Perform the action
    choose:
      - conditions:
          - alias: Complete Button Pressed
            condition: template
            value_template: "{{ wait.trigger.event.data.action == action_complete }}"
        sequence:
          - alias: Set date last completed date to today.
            action: input_datetime.set_datetime
            data:
              date: "{{ now().date().strftime('%Y-%m-%d') }}"
            target:
              entity_id: !input date_last_completed_helper
      - conditions:
          - alias: Snooze Button Pressed
            condition: template
            value_template: "{{ wait.trigger.event.data.action == action_snooze }}"
        sequence:
          - alias: Set date to delay next notification by 3 days
            action: input_datetime.set_datetime
            data:
              date: >-
                {{ ( now().date() - timedelta( days= (days_between_notifications
                | int) ) + timedelta( days= (snooze_duration | int) )
                ).strftime('%Y-%m-%d') }}
            target:
              entity_id: !input date_last_completed_helper
      - conditions:
          - alias: Notification Cleared
            condition: template
            value_template: >-
              {{ wait.trigger.event.event_type ==
              'mobile_app_notification_cleared' }}
        sequence:
          - alias: Set date to delay next notification by 3 days
            action: input_datetime.set_datetime
            data:
              date: >-
                {{ ( now().date() - timedelta( days= (days_between_notifications
                | int) ) + timedelta( days= (snooze_duration | int) )
                ).strftime('%Y-%m-%d') }}
            target:
              entity_id: !input date_last_completed_helper
  - alias: Dismiss notifications on all devices
    repeat:
      for_each: !input notify_device
      sequence:
        - service: mobile_app.clear_notification
          data:
            device_id: "{{ repeat.item }}"
            tag: "{{ context.id }}"