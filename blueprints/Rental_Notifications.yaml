blueprint:
  domain: automation
  # source_url:
  author: Anthon Bahl (@AnthonyBahl)
  name: Rental Notifications 📱
  homeassistant:
    min_version: 2024.6.0
  description: >
    # Rental Notifications 📱

    <b>Version 0.1.0</b>


    I created this blueprint to send myself notification when things around the house need to be addressed.

    <details>
      <summary><b>My The Automation Proccess:</b> 👈</summary>

      - **Triggers**
      - **Conditions**
      - **Actions**

    </details>

    <details>
      <summary><b>Changelog</b> 👈</summary>
      <ul>
        <li>Version 0.1.0</li>
        <ul>
          <li>Initial Release</li>
        </ul>
      </ul>
    </details>


    \* Required
  input:
    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications.
      selector:
        device:
          filter:
            integration: mobile_app
    trigger_settings:
      name: Trigger Settings *
      icon: mdi:ear-hearing
      description: Settings for what will trigger the notification.
      collapsed: true
      input:
        trigger_time:
          name: Time to Trigger *
          description: >
            The time of day to trigger the notification.

            📝 Note - This will fire every day, however you can configure it to only happen on certain days in the conditions section.
          selector:
            time: 
          default: "09:00:00"
    condition_settings:
      name: Condition Settings *
      icon: mdi:check-circle
      description: Conditions that must be met for the notification to be sent.
      collapsed: true
      input:
        automation_conditions:
          name: Automation Conditions *
          description: >
            Conditions that must be met for the notification to be sent.
          selector:
            condition:
          default: []

mode: single

triggers:
  - at: !input trigger_time
    alias: Daily at !input trigger_time
    trigger: time

conditions:
  - alias: Verify Day of the Week
    condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  - alias: Check if it's time to notify
    condition: template
    value_template: >-
      {{ ( now() | as_timestamp) - (
      state_attr('input_datetime.upstairs_bathroom_drain_maintenance',
      'timestamp') | int) > 182 * 86400 }}
actions:
  - alias: Set up variables for the actions
    variables:
      action_complete: "{{ 'COMPLETE_' ~ context.id }}"
      action_snooze: "{{ 'SNOOZE_' ~ context.id }}"    
  - alias: Send notification
    domain: mobile_app
    type: notify
    device_id: !input notify_device
    title: Rental Maintenance
    message: Upstairs bathroom drain maintenance is due.
    data:
      actions:
        - action: "{{ action_confirm }}"
          title: Complete
        - action: "{{ action_dismiss }}"
          title: Snooze
  - alias: Wait for response
    wait_for_trigger:
      - event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_complete }}"
        trigger: event
      - event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_snooze }}"
        trigger: event
      - trigger: event
        event_type: mobile_app_notification_cleared
        event_data:
          action_1_key: "{{ action_complete }}"
  - alias: Perform the action
    choose:
      - conditions:
          - alias: Complete Button Pressed
            condition: template
            value_template: "{{ wait.trigger.event.data.action == action_complete }}"
        sequence:
          - alias: Set date last completed date to today.
            action: input_datetime.set_datetime
            data:
              date: "{{ now().date().strftime('%Y-%m-%d') }}"
            target:
              entity_id: input_datetime.upstairs_bathroom_drain_maintenance
      - conditions:
          - alias: Snooze Button Pressed
            condition: template
            value_template: "{{ wait.trigger.event.data.action == action_snooze }}"
        sequence:
          - alias: Set date to delay next notification by 3 days
            action: input_datetime.set_datetime
            data:
              date: >-
                {{ ( now().date() - timedelta( days=182 ) + timedelta( days=3 )
                ).strftime('%Y-%m-%d') }}
            target:
              entity_id: input_datetime.upstairs_bathroom_drain_maintenance
      - conditions:
          - alias: Notification Cleared
            condition: template
            value_template: >-
              {{ wait.trigger.event.event_type ==
              'mobile_app_notification_cleared' }}
        sequence: []